;; A definition of a state type called "traffic_state" with variables
;; x and y of type Real. 
(define-state-type traffic_state 
((laneCleftCwidth Real)
  (laneCrightCwidth Real)
  (roadCleftCwidth Real)
  (roadCrightCwidth Real)
  (vehicleAegoBarriveCtime Real)
  (vehicleAegoBlaneBlaneCid Real)
  (vehicleAegoBlaneBroadCid Real)
  (vehicleAegoBlaneBturn Real)
  (vehicleAegoBlaneBwayCid Real)
  (vehicleAegoBlength Real)
  (vehicleAegoBposBl Real)
  (vehicleAegoBposBs Real)
  (vehicleAegoBsizeBl Real)
  (vehicleAegoBsizeBs Real)
  (vehicleAegoBstopCline Real)
  (vehicleAegoBvBl Real)
  (vehicleAegoBvBs Real)
  (destinationBposBl Real)
  (destinationBposBs Real)
  (destinationBsizeBl Real)
  (destinationBsizeBs Real)
  (stopCsignBposBl Real)
  (stopCsignBposBs Real)
  (stopCsignBsizeBl Real)
  (stopCsignBsizeBs Real)
  (intersectionBposBl Real)
  (intersectionBposBs Real)
  (intersectionBsizeBl Real)
  (intersectionBsizeBs Real)
  (vehicleBarriveCtime Real)
  (vehicleBlaneBlaneCid Real)
  (vehicleBlaneBroadCid Real)
  (vehicleBlaneBturn Real)
  (vehicleBlaneBwayCid Real)
  (vehicleBlength Real)
  (vehicleBposBl Real)
  (vehicleBposBs Real)
  (vehicleBsizeBl Real)
  (vehicleBsizeBs Real)
  (vehicleBstopCline Real)
  (vehicleBvBl Real)
  (vehicleBvBs Real)
  (violationCcounter Int)
  (scenarioCstage Int)
  (overlapCfinished Bool)
  (watchCvehiclesBempty Bool))
)

;; A definition of a set of states "initial_states" over 
;; "traffic_state" by a state formula. These are all states where 
;; both x and y are 0.
(define-states initial_states traffic_state
(let ((b!276 (= violationCcounter 0)))
  (let ((a!239 (* (- 1.0) vehicleAegoBsizeBs)))
   (let ((a!250 (* (- 1.0) vehicleAegoBposBs)))
    (let ((a!322 (* (- 1.0) intersectionBsizeBs)))
     (let ((a!357 (+ intersectionBposBs a!322 a!250 a!239)))
      (let ((b!343 (<= a!357 2.0)))
       (let ((b!320 (<= (+ intersectionBposBs intersectionBsizeBs vehicleAegoBsizeBs) 0.0)))
        (let ((b!358 (not b!320)))
         (let ((b!348 (and b!358 (<= a!357 4.0)
             (not b!343))))
          (let ((b!268 (= vehicleAegoBarriveCtime 0.0)))
           (let ((b!291 (= vehicleBarriveCtime 0.0)))
            (let ((b!279 (= vehicleBstopCline 3.0)))
             (let ((b!289 (= watchCvehiclesBempty true)))
              (let ((b!288 (= overlapCfinished false)))
               (let ((b!290 (= scenarioCstage 1)))
                (let ((b!134 (= vehicleBlength 2.0)))
                 (let ((a!122 (+ (* vehicleBvBl vehicleBvBl)
                     (* vehicleBvBs vehicleBvBs))))
                  (let ((b!126 (<= a!122 80.0)))
                   (let ((b!125 (and (= vehicleBsizeBl 2.0)
                       (= vehicleBsizeBs 2.0))))
                    (let ((b!117 (and (> vehicleBsizeBl 0.0)
                        (> vehicleBsizeBs 0.0))))
                     (let ((a!95 (+ intersectionBposBl intersectionBsizeBl)))
                      (let ((a!93 (- intersectionBposBl intersectionBsizeBl)))
                       (let ((b!106 (<= (* a!93 a!95) 0.0)))
                        (let ((b!104 (and (>= intersectionBsizeBs 10.0)
                            (>= intersectionBsizeBl 5.0))))
                         (let ((b!99 (and (> intersectionBsizeBl 0.0)
                             (> intersectionBsizeBs 0.0))))
                          (let ((a!82 (+ stopCsignBposBl stopCsignBsizeBl)))
                           (let ((a!80 (- stopCsignBposBl stopCsignBsizeBl)))
                            (let ((b!88 (<= (* a!80 a!82) 0.0)))
                             (let ((b!86 (and (> stopCsignBsizeBl 0.0)
                                 (> stopCsignBsizeBs 0.0))))
                              (let ((b!55 (and (= destinationBsizeBl 2.0)
                                  (= destinationBsizeBs 2.0))))
                               (let ((b!52 (and (> destinationBsizeBl 0.0)
                                   (> destinationBsizeBs 0.0))))
                                (let ((b!41 (and (= vehicleAegoBvBl 0.0)
                                    (> vehicleAegoBvBs 0.0))))
                                 (let ((b!38 (and (= vehicleAegoBposBl 0.0)
                                     (= vehicleAegoBposBs 0.0))))
                                  (let ((b!35 (= vehicleAegoBlength 2.0)))
                                   (let ((a!21 (+ (* vehicleAegoBvBl vehicleAegoBvBl)
                                       (* vehicleAegoBvBs vehicleAegoBvBs))))
                                    (let ((b!27 (<= a!21 80.0)))
                                     (let ((b!25 (and (= vehicleAegoBsizeBl 2.0)
                                         (= vehicleAegoBsizeBs 2.0))))
                                      (let ((b!16 (and (> vehicleAegoBsizeBl 0.0)
                                          (> vehicleAegoBsizeBs 0.0))))
                                       (let ((b!185 (= vehicleBvBl 0.0)))
                                        (let ((b!172 (< vehicleBlaneBturn 0.0)))
                                         (let ((b!154 (and (>= vehicleBlaneBwayCid 2.0)
                                             (< vehicleBlaneBwayCid 3.0))))
                                          (let ((b!167 (< vehicleAegoBlaneBturn 0.0)))
                                           (let ((b!210 (<= vehicleBvBl 0.0)))
                                            (let ((b!168 (> vehicleBlaneBturn 0.0)))
                                             (let ((b!194 (not b!168)))
                                              (let ((b!142 (< vehicleBlaneBwayCid 4.0)))
                                               (let ((b!181 (and (>= vehicleBlaneBwayCid 3.0) b!142)))
                                                (let ((b!170 (= vehicleAegoBlaneBturn 0.0)))
                                                 (let ((b!203 (and b!170 b!181 b!194)))
                                                  (let ((b!176 (= vehicleBlaneBturn 0.0)))
                                                   (let ((b!202 (and b!167 b!181 b!176)))
                                                    (let ((b!211 (and (or false (and b!167 b!154 b!168) b!202 b!203)
                                                        (>= vehicleBposBl 0.0) b!210)))
                                                     (let ((b!148 (and (>= vehicleBlaneBwayCid 1.0)
                                                         (< vehicleBlaneBwayCid 2.0))))
                                                      (let ((b!200 (and (or false (and b!167 b!148 b!194)
                                                           (and b!170 b!148 b!176)
                                                           (and b!170 b!154 b!172))
                                                          (> vehicleBvBl 0.0))))
                                                       (let ((b!191 (<= vehicleBposBl 0.0)))
                                                        (let ((b!190 (or false (and b!170 b!148 b!172)
                                                            (and (> vehicleAegoBlaneBturn 0.0) b!148 b!176)
                                                            (and (> vehicleAegoBlaneBturn 0.0) b!154 b!172))))
                                                         (let ((b!183 (or false (and b!167 b!148 b!168)
                                                             (and b!170 b!148 b!168)
                                                             (and b!170 b!154 (not b!172))
                                                             (and (> vehicleAegoBlaneBturn 0.0) b!148 (not b!176))
                                                             (and (> vehicleAegoBlaneBturn 0.0) b!154 (not b!172))
                                                             (and (> vehicleAegoBlaneBturn 0.0) b!181))))
                                                          (let ((b!216 (or false (and b!183 (< vehicleBposBl 0.0) b!185)
                                                              (and b!190 b!191 (>= vehicleBvBl 0.0)) b!200 (and (or false (and b!167 b!154 b!176) b!202 b!203)
                                                               (< vehicleBvBl 0.0)) b!211 (and (or false (and b!167 b!154 b!172))
                                                               (> vehicleBposBl 0.0) b!185))))
                                                           (let ((a!94 (- intersectionBposBs intersectionBsizeBs)))
                                                            (let ((a!114 (+ vehicleBposBs vehicleBsizeBs)))
                                                             (let ((b!162 (and (and (>= vehicleBlaneBwayCid 0.0)
                                                                  (< vehicleBlaneBwayCid 1.0))
                                                                 (< a!114 a!94))))
                                                              (let ((a!96 (+ intersectionBposBs intersectionBsizeBs)))
                                                               (let ((a!112 (- vehicleBposBs vehicleBsizeBs)))
                                                                (let ((b!163 (or false (and b!148 (< (+ vehicleBposBl vehicleBsizeBl) a!93))
                                                                    (and b!154 (< a!112 a!96))
                                                                    (and b!148 (> (+ vehicleBposBl vehicleBsizeBl) a!93)) b!162)))
                                                                 (let ((b!144 (>= vehicleBstopCline 0.0)))
                                                                  (let ((b!166 (or false (and b!144 b!163)
                                                                      (< vehicleBstopCline 0.0))))
                                                                   (let ((b!141 (>= vehicleBlaneBwayCid 0.0)))
                                                                    (let ((b!143 (and b!141 b!142)))
                                                                     (let ((b!140 (and (>= vehicleAegoBlaneBwayCid 0.0)
                                                                         (< vehicleAegoBlaneBwayCid 4.0))))
                                                                      (let ((b!136 (= vehicleAegoBstopCline a!94)))
                                                                       (let ((b!135 (= vehicleAegoBlaneBwayCid 0.0)))
                                                                        (let ((b!75 (and (> roadCleftCwidth 0.0)
                                                                            (> roadCrightCwidth 0.0)
                                                                            (>= (+ roadCleftCwidth roadCrightCwidth)
                                                                             (/ 99.0 10.0)))))
                                                                         (let ((b!69 (> roadCrightCwidth laneCrightCwidth)))
                                                                          (let ((b!68 (> roadCleftCwidth laneCleftCwidth)))
                                                                           (let ((b!64 (and (> laneCleftCwidth 0.0)
                                                                               (> laneCrightCwidth 0.0)
                                                                               (>= (+ laneCleftCwidth laneCrightCwidth)
                                                                                (/ 33.0 10.0)))))
                                                                            (let ((b!270 (and b!64 b!68 b!69 b!75 b!135 b!136 b!140 b!143 b!166 b!216 b!16 b!25 b!27 b!35 b!38 b!41 b!52 b!55 b!86 b!88 b!99 b!104 b!106 b!117 b!125 b!126 b!134)))
                                                                             (and b!270 b!290 b!288 b!289 b!279 b!291 b!268 b!348 b!276)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)

;; Definition of a transition
(define-transition move_traffic traffic_state
(and (= next.vehicleBstopCline (- state.vehicleBstopCline (* 0.1 state.vehicleBvBs)))
  (= next.vehicleAegoBvBs (ite (let ((a!239 (* (- 1.0) state.vehicleAegoBsizeBs)))
     (let ((a!240 (+ state.vehicleAegoBposBs a!239)))
      (let ((a!96 (+ state.intersectionBposBs state.intersectionBsizeBs)))
       (let ((b!234 (not state.overlapCfinished)))
        (let ((b!243 (and b!234 (not (<= a!96 a!240)))))
         (or false b!243)))))) 0 1))
  (= next.vehicleAegoBarriveCtime (ite (= state.scenarioCstage 2)
    (+ state.vehicleAegoBarriveCtime 0.1) 0))
  (= next.vehicleBarriveCtime (ite (< (- state.vehicleBstopCline state.vehicleBsizeBs) 2)
    (+ state.vehicleBarriveCtime 0.1) 0))
  (= next.scenarioCstage (ite (or false (and (= state.scenarioCstage 1)
      (<= (+ state.intersectionBposBs state.intersectionBsizeBs state.vehicleAegoBsizeBs) 0.0))
     (and (= state.scenarioCstage 2)
      (<= (+ state.intersectionBposBs state.intersectionBsizeBs state.vehicleAegoBsizeBs) 0.0))) 0 (ite (or false (and (= state.scenarioCstage 1)
       (let ((a!239 (* (- 1.0) state.vehicleAegoBsizeBs)))
        (let ((a!250 (* (- 1.0) state.vehicleAegoBposBs)))
         (let ((a!322 (* (- 1.0) state.intersectionBsizeBs)))
          (let ((a!357 (+ state.intersectionBposBs a!322 a!250 a!239)))
           (let ((b!343 (<= a!357 2.0)))
            (let ((a!21 (+ (* state.vehicleAegoBvBl state.vehicleAegoBvBl)
                (* state.vehicleAegoBvBs state.vehicleAegoBvBs))))
             (let ((a!321 (* (- 1.0) state.intersectionBposBs)))
              (let ((a!277 (+ state.vehicleAegoBposBs state.vehicleAegoBsizeBs a!321 state.intersectionBsizeBs)))
               (let ((b!278 (<= a!277 (/ 3.0 10.0))))
                (let ((b!320 (<= (+ state.intersectionBposBs state.intersectionBsizeBs state.vehicleAegoBsizeBs) 0.0)))
                 (let ((b!358 (not b!320)))
                  (or false (and b!358 (not b!278))
                   (and b!358 b!278 (<= a!21 5.0) b!343))))))))))))))
      (and (= state.scenarioCstage 2)
       (let ((a!321 (* (- 1.0) state.intersectionBposBs)))
        (let ((a!277 (+ state.vehicleAegoBposBs state.vehicleAegoBsizeBs a!321 state.intersectionBsizeBs)))
         (let ((b!295 (<= a!277 1.0)))
          (let ((b!320 (<= (+ state.intersectionBposBs state.intersectionBsizeBs state.vehicleAegoBsizeBs) 0.0)))
           (let ((b!358 (not b!320)))
            (or false (and b!358 (not b!295))
             (and b!358 b!295 state.watchCvehiclesBempty)))))))))
     (+ state.scenarioCstage 1) state.scenarioCstage)))
  (= next.watchCvehiclesBempty (ite (and (= state.scenarioCstage 1) false) false (ite (and (= state.scenarioCstage 2)
      (let ((b!144 (>= state.vehicleBstopCline 0.0)))
       (not (<= (ite b!144 state.vehicleBstopCline (* (- 1.0) state.vehicleBstopCline)) 10.0)))) true state.watchCvehiclesBempty)))
  (= next.overlapCfinished (ite (> state.scenarioCstage 2) true state.overlapCfinished))
  (= next.violationCcounter (ite (let ((b!313 (>= state.vehicleAegoBarriveCtime 0.0)))
     (let ((a!12 (+ state.vehicleAegoBposBs state.vehicleAegoBsizeBs)))
      (let ((b!378 (>= a!12 (+ (- 2.0) state.intersectionBposBs (* (- 1.0) state.intersectionBsizeBs)))))
       (let ((b!390 (and (<= (+ state.vehicleBstopCline (* (- 1.0) state.vehicleBsizeBs)) 2.0)
           (>= (+ state.vehicleBstopCline (* (- 1.0) state.vehicleBsizeBs)) 0.0)
           (<= a!12 (+ state.intersectionBposBs (* (- 1.0) state.intersectionBsizeBs))) b!378 b!313 (not (<= state.vehicleBarriveCtime state.vehicleAegoBarriveCtime)))))
        (let ((a!239 (* (- 1.0) state.vehicleAegoBsizeBs)))
         (let ((a!240 (+ state.vehicleAegoBposBs a!239)))
          (let ((a!96 (+ state.intersectionBposBs state.intersectionBsizeBs)))
           (let ((b!234 (not state.overlapCfinished)))
            (let ((b!243 (and b!234 (not (<= a!96 a!240)))))
             (let ((b!306 (or false b!243)))
              (and (not b!306)
               (or false b!390))))))))))))
    (+ state.violationCcounter 1) 0))
  (= next.laneCleftCwidth state.laneCleftCwidth)
  (= next.laneCrightCwidth state.laneCrightCwidth)
  (= next.roadCleftCwidth state.roadCleftCwidth)
  (= next.roadCrightCwidth state.roadCrightCwidth)
  (= next.vehicleAegoBlaneBlaneCid state.vehicleAegoBlaneBlaneCid)
  (= next.vehicleAegoBlaneBroadCid state.vehicleAegoBlaneBroadCid)
  (= next.vehicleAegoBlaneBturn state.vehicleAegoBlaneBturn)
  (= next.vehicleAegoBlaneBwayCid state.vehicleAegoBlaneBwayCid)
  (= next.vehicleAegoBlength state.vehicleAegoBlength)
  (= next.vehicleAegoBposBl state.vehicleAegoBposBl)
  (= next.vehicleAegoBposBs state.vehicleAegoBposBs)
  (= next.vehicleAegoBsizeBl state.vehicleAegoBsizeBl)
  (= next.vehicleAegoBsizeBs state.vehicleAegoBsizeBs)
  (= next.vehicleAegoBstopCline (- (- state.intersectionBposBs (* 0.1 state.vehicleAegoBvBs)) state.intersectionBsizeBs))
  (= next.vehicleAegoBvBl state.vehicleAegoBvBl)
  (= next.destinationBposBl state.destinationBposBl)
  (= next.destinationBposBs (- state.destinationBposBs (* 0.1 state.vehicleAegoBvBs)))
  (= next.destinationBsizeBl state.destinationBsizeBl)
  (= next.destinationBsizeBs state.destinationBsizeBs)
  (= next.stopCsignBposBl state.stopCsignBposBl)
  (= next.stopCsignBposBs (- state.stopCsignBposBs (* 0.1 state.vehicleAegoBvBs)))
  (= next.stopCsignBsizeBl state.stopCsignBsizeBl)
  (= next.stopCsignBsizeBs state.stopCsignBsizeBs)
  (= next.intersectionBposBl state.intersectionBposBl)
  (= next.intersectionBposBs (- state.intersectionBposBs (* 0.1 state.vehicleAegoBvBs)))
  (= next.intersectionBsizeBl state.intersectionBsizeBl)
  (= next.intersectionBsizeBs state.intersectionBsizeBs)
  (= next.vehicleBlaneBlaneCid state.vehicleBlaneBlaneCid)
  (= next.vehicleBlaneBroadCid state.vehicleBlaneBroadCid)
  (= next.vehicleBlaneBturn state.vehicleBlaneBturn)
  (= next.vehicleBlaneBwayCid state.vehicleBlaneBwayCid)
  (= next.vehicleBlength state.vehicleBlength)
  (= next.vehicleBposBl state.vehicleBposBl)
  (= next.vehicleBposBs (- state.vehicleBposBs (* 0.1 state.vehicleAegoBvBs)))
  (= next.vehicleBsizeBl state.vehicleBsizeBl)
  (= next.vehicleBsizeBs state.vehicleBsizeBs)
  (= next.vehicleBvBl state.vehicleBvBl)
  (= next.vehicleBvBs state.vehicleBvBs))
)

;; Directly define a simple counter system
(define-transition-system T traffic_state
   ;; Initial states 
   initial_states
   ;; Transition 
   move_traffic
)

;; Check violation
(query T 
(< violationCcounter 2)
)
