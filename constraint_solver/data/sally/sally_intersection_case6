;; A definition of a state type called "traffic_state" with variables
;; x and y of type Real. 
(define-state-type traffic_state 
((laneCleftCwidth Real)
  (laneCrightCwidth Real)
  (roadCleftCwidth Real)
  (roadCrightCwidth Real)
  (vehicleAegoBarriveCtime Real)
  (vehicleAegoBlaneBlaneCid Real)
  (vehicleAegoBlaneBroadCid Real)
  (vehicleAegoBlaneBturn Real)
  (vehicleAegoBlaneBwayCid Real)
  (vehicleAegoBlength Real)
  (vehicleAegoBposBl Real)
  (vehicleAegoBposBs Real)
  (vehicleAegoBsizeBl Real)
  (vehicleAegoBsizeBs Real)
  (vehicleAegoBstopCline Real)
  (vehicleAegoBvBl Real)
  (vehicleAegoBvBs Real)
  (destinationBposBl Real)
  (destinationBposBs Real)
  (destinationBsizeBl Real)
  (destinationBsizeBs Real)
  (crosswalkBposBl Real)
  (crosswalkBposBs Real)
  (crosswalkBsizeBl Real)
  (crosswalkBsizeBs Real)
  (pedestrianBposBl Real)
  (pedestrianBposBs Real)
  (pedestrianBsizeBl Real)
  (pedestrianBsizeBs Real)
  (pedestrianBvBl Real)
  (pedestrianBvBs Real)
  (vehicleBarriveCtime Real)
  (vehicleBlaneBlaneCid Real)
  (vehicleBlaneBroadCid Real)
  (vehicleBlaneBturn Real)
  (vehicleBlaneBwayCid Real)
  (vehicleBlength Real)
  (vehicleBposBl Real)
  (vehicleBposBs Real)
  (vehicleBsizeBl Real)
  (vehicleBsizeBs Real)
  (vehicleBstopCline Real)
  (vehicleBvBl Real)
  (vehicleBvBs Real)
  (stopCsignBposBl Real)
  (stopCsignBposBs Real)
  (stopCsignBsizeBl Real)
  (stopCsignBsizeBs Real)
  (trafficClightAselfBcolor Int)
  (trafficClightAselfBposBl Real)
  (trafficClightAselfBposBs Real)
  (trafficClightAselfBsizeBl Real)
  (trafficClightAselfBsizeBs Real)
  (trafficClightAmainBcolor Int)
  (trafficClightAmainBposBl Real)
  (trafficClightAmainBposBs Real)
  (trafficClightAmainBsizeBl Real)
  (trafficClightAmainBsizeBs Real)
  (intersectionBposBl Real)
  (intersectionBposBs Real)
  (intersectionBsizeBl Real)
  (intersectionBsizeBs Real)
  (violationCcounter Int)
  (overlapCfinished Bool)
  (scenarioCstage Int))
)

;; A definition of a set of states "initial_states" over 
;; "traffic_state" by a state formula. These are all states where 
;; both x and y are 0.
(define-states initial_states traffic_state
(let ((b!494 (= violationCcounter 0)))
  (let ((b!496 (not (<= vehicleAegoBlaneBturn 0.0))))
   (let ((a!327 (* (- 1.0) intersectionBsizeBs)))
    (let ((a!477 (+ intersectionBposBs a!327)))
     (let ((b!488 (= trafficClightAmainBcolor 1)))
      (let ((b!440 (<= trafficClightAselfBcolor 0)))
       (let ((b!484 (<= (+ intersectionBposBs intersectionBsizeBs vehicleAegoBsizeBs) 0.0)))
        (let ((b!458 (not b!484)))
         (let ((b!497 (and b!458 b!440 b!488 (not (<= a!477 (+ 2.0 vehicleAegoBposBs vehicleAegoBsizeBs)))
             (not (<= 0.0 vehicleAegoBarriveCtime)) b!496)))
          (let ((b!443 (= vehicleAegoBarriveCtime 0.0)))
           (let ((b!479 (= vehicleBarriveCtime 0.0)))
            (let ((b!444 (= overlapCfinished false)))
             (let ((b!449 (= scenarioCstage 1)))
              (let ((a!201 (+ intersectionBposBl intersectionBsizeBl)))
               (let ((a!199 (- intersectionBposBl intersectionBsizeBl)))
                (let ((b!211 (<= (* a!199 a!201) 0.0)))
                 (let ((b!209 (and (>= intersectionBsizeBs 10.0)
                     (>= intersectionBsizeBl 5.0))))
                  (let ((b!205 (and (> intersectionBsizeBl 0.0)
                      (> intersectionBsizeBs 0.0))))
                   (let ((a!184 (+ trafficClightAmainBposBl trafficClightAmainBsizeBl)))
                    (let ((a!182 (- trafficClightAmainBposBl trafficClightAmainBsizeBl)))
                     (let ((b!194 (<= (* a!182 a!184) 0.0)))
                      (let ((b!192 (and (>= trafficClightAmainBcolor 0)
                          (<= trafficClightAmainBcolor 3))))
                       (let ((b!188 (and (> trafficClightAmainBsizeBl 0.0)
                           (> trafficClightAmainBsizeBs 0.0))))
                        (let ((a!165 (+ trafficClightAselfBposBl trafficClightAselfBsizeBl)))
                         (let ((a!163 (- trafficClightAselfBposBl trafficClightAselfBsizeBl)))
                          (let ((b!177 (<= (* a!163 a!165) 0.0)))
                           (let ((b!175 (and (>= trafficClightAselfBcolor 0)
                               (<= trafficClightAselfBcolor 3))))
                            (let ((b!169 (and (> trafficClightAselfBsizeBl 0.0)
                                (> trafficClightAselfBsizeBs 0.0))))
                             (let ((a!152 (+ stopCsignBposBl stopCsignBsizeBl)))
                              (let ((a!150 (- stopCsignBposBl stopCsignBsizeBl)))
                               (let ((b!158 (<= (* a!150 a!152) 0.0)))
                                (let ((b!156 (and (> stopCsignBsizeBl 0.0)
                                    (> stopCsignBsizeBs 0.0))))
                                 (let ((b!145 (= vehicleBlength 2.0)))
                                  (let ((a!133 (+ (* vehicleBvBl vehicleBvBl)
                                      (* vehicleBvBs vehicleBvBs))))
                                   (let ((b!137 (<= a!133 10000.0)))
                                    (let ((b!136 (and (= vehicleBsizeBl 2.0)
                                        (= vehicleBsizeBs 2.0))))
                                     (let ((b!128 (and (> vehicleBsizeBl 0.0)
                                         (> vehicleBsizeBs 0.0))))
                                      (let ((a!112 (+ (* pedestrianBvBl pedestrianBvBl)
                                          (* pedestrianBvBs pedestrianBvBs))))
                                       (let ((b!117 (<= a!112 5.0)))
                                        (let ((b!116 (and (= pedestrianBsizeBl (/ 1.0 2.0))
                                            (= pedestrianBsizeBs (/ 1.0 2.0)))))
                                         (let ((b!107 (and (> pedestrianBsizeBl 0.0)
                                             (> pedestrianBsizeBs 0.0))))
                                          (let ((a!82 (+ crosswalkBposBl crosswalkBsizeBl)))
                                           (let ((a!80 (- crosswalkBposBl crosswalkBsizeBl)))
                                            (let ((b!96 (<= (* a!80 a!82) 0.0)))
                                             (let ((b!94 (and (>= crosswalkBposBs 5.0)
                                                 (< crosswalkBposBs 50.0))))
                                              (let ((b!90 (and (= crosswalkBsizeBs 2.0)
                                                  (>= crosswalkBsizeBl 5.0))))
                                               (let ((b!86 (and (> crosswalkBsizeBl 0.0)
                                                   (> crosswalkBsizeBs 0.0))))
                                                (let ((b!55 (and (= destinationBsizeBl 2.0)
                                                    (= destinationBsizeBs 2.0))))
                                                 (let ((b!52 (and (> destinationBsizeBl 0.0)
                                                     (> destinationBsizeBs 0.0))))
                                                  (let ((b!41 (and (= vehicleAegoBvBl 0.0)
                                                      (> vehicleAegoBvBs 0.0))))
                                                   (let ((b!38 (and (= vehicleAegoBposBl 0.0)
                                                       (= vehicleAegoBposBs 0.0))))
                                                    (let ((b!35 (= vehicleAegoBlength 2.0)))
                                                     (let ((a!20 (* vehicleAegoBvBs vehicleAegoBvBs)))
                                                      (let ((a!19 (* vehicleAegoBvBl vehicleAegoBvBl)))
                                                       (let ((a!21 (+ a!19 a!20)))
                                                        (let ((b!27 (<= a!21 10000.0)))
                                                         (let ((b!25 (and (= vehicleAegoBsizeBl 2.0)
                                                             (= vehicleAegoBsizeBs 2.0))))
                                                          (let ((b!16 (and (> vehicleAegoBsizeBl 0.0)
                                                              (> vehicleAegoBsizeBs 0.0))))
                                                           (let ((b!262 (= vehicleBvBl 0.0)))
                                                            (let ((b!249 (< vehicleBlaneBturn 0.0)))
                                                             (let ((b!231 (and (>= vehicleBlaneBwayCid 2.0)
                                                                 (< vehicleBlaneBwayCid 3.0))))
                                                              (let ((b!244 (< vehicleAegoBlaneBturn 0.0)))
                                                               (let ((b!287 (<= vehicleBvBl 0.0)))
                                                                (let ((b!245 (> vehicleBlaneBturn 0.0)))
                                                                 (let ((b!271 (not b!245)))
                                                                  (let ((b!219 (< vehicleBlaneBwayCid 4.0)))
                                                                   (let ((b!258 (and (>= vehicleBlaneBwayCid 3.0) b!219)))
                                                                    (let ((b!247 (= vehicleAegoBlaneBturn 0.0)))
                                                                     (let ((b!280 (and b!247 b!258 b!271)))
                                                                      (let ((b!253 (= vehicleBlaneBturn 0.0)))
                                                                       (let ((b!279 (and b!244 b!258 b!253)))
                                                                        (let ((b!288 (and (or false (and b!244 b!231 b!245) b!279 b!280)
                                                                            (>= vehicleBposBl 0.0) b!287)))
                                                                         (let ((b!225 (and (>= vehicleBlaneBwayCid 1.0)
                                                                             (< vehicleBlaneBwayCid 2.0))))
                                                                          (let ((b!277 (and (or false (and b!244 b!225 b!271)
                                                                               (and b!247 b!225 b!253)
                                                                               (and b!247 b!231 b!249))
                                                                              (> vehicleBvBl 0.0))))
                                                                           (let ((b!268 (<= vehicleBposBl 0.0)))
                                                                            (let ((b!267 (or false (and b!247 b!225 b!249)
                                                                                (and (> vehicleAegoBlaneBturn 0.0) b!225 b!253)
                                                                                (and (> vehicleAegoBlaneBturn 0.0) b!231 b!249))))
                                                                             (let ((b!260 (or false (and b!244 b!225 b!245)
                                                                                 (and b!247 b!225 b!245)
                                                                                 (and b!247 b!231 (not b!249))
                                                                                 (and (> vehicleAegoBlaneBturn 0.0) b!225 (not b!253))
                                                                                 (and (> vehicleAegoBlaneBturn 0.0) b!231 (not b!249))
                                                                                 (and (> vehicleAegoBlaneBturn 0.0) b!258))))
                                                                              (let ((b!293 (or false (and b!260 (< vehicleBposBl 0.0) b!262)
                                                                                  (and b!267 b!268 (>= vehicleBvBl 0.0)) b!277 (and (or false (and b!244 b!231 b!253) b!279 b!280)
                                                                                   (< vehicleBvBl 0.0)) b!288 (and (or false (and b!244 b!231 b!249))
                                                                                   (> vehicleBposBl 0.0) b!262))))
                                                                               (let ((a!200 (- intersectionBposBs intersectionBsizeBs)))
                                                                                (let ((a!125 (+ vehicleBposBs vehicleBsizeBs)))
                                                                                 (let ((b!239 (and (and (>= vehicleBlaneBwayCid 0.0)
                                                                                      (< vehicleBlaneBwayCid 1.0))
                                                                                     (< a!125 a!200))))
                                                                                  (let ((a!202 (+ intersectionBposBs intersectionBsizeBs)))
                                                                                   (let ((a!123 (- vehicleBposBs vehicleBsizeBs)))
                                                                                    (let ((b!240 (or false (and b!225 (< (+ vehicleBposBl vehicleBsizeBl) a!199))
                                                                                        (and b!231 (< a!123 a!202))
                                                                                        (and b!225 (> (+ vehicleBposBl vehicleBsizeBl) a!199)) b!239)))
                                                                                     (let ((b!243 (or false (and (>= vehicleBstopCline 0.0) b!240)
                                                                                         (< vehicleBstopCline 0.0))))
                                                                                      (let ((b!218 (>= vehicleBlaneBwayCid 0.0)))
                                                                                       (let ((b!220 (and b!218 b!219)))
                                                                                        (let ((b!217 (and (>= vehicleAegoBlaneBwayCid 0.0)
                                                                                            (< vehicleAegoBlaneBwayCid 4.0))))
                                                                                         (let ((b!213 (= vehicleAegoBstopCline a!200)))
                                                                                          (let ((b!212 (= vehicleAegoBlaneBwayCid 0.0)))
                                                                                           (let ((b!75 (and (> roadCleftCwidth 0.0)
                                                                                               (> roadCrightCwidth 0.0)
                                                                                               (>= (+ roadCleftCwidth roadCrightCwidth)
                                                                                                (/ 99.0 10.0)))))
                                                                                            (let ((b!69 (> roadCrightCwidth laneCrightCwidth)))
                                                                                             (let ((b!68 (> roadCleftCwidth laneCleftCwidth)))
                                                                                              (let ((b!64 (and (> laneCleftCwidth 0.0)
                                                                                                  (> laneCrightCwidth 0.0)
                                                                                                  (>= (+ laneCleftCwidth laneCrightCwidth)
                                                                                                   (/ 33.0 10.0)))))
                                                                                               (let ((b!424 (and b!64 b!68 b!69 b!75 b!212 b!213 b!217 b!220 b!243 b!293 b!16 b!25 b!27 b!35 b!38 b!41 b!52 b!55 b!86 b!90 b!94 b!96 b!107 b!116 b!117 b!128 b!136 b!137 b!145 b!156 b!158 b!169 b!175 b!177 b!188 b!192 b!194 b!205 b!209 b!211)))
                                                                                                (and b!424 b!449 b!444 b!479 b!443 b!497 b!494))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)

;; Definition of a transition
(define-transition move_traffic traffic_state
(and (= next.vehicleAegoBvBs (ite (let ((a!202 (+ state.intersectionBposBs state.intersectionBsizeBs)))
     (let ((a!319 (* (- 1.0) state.vehicleAegoBsizeBs)))
      (let ((a!451 (/ (+ state.vehicleAegoBsizeBl state.vehicleBsizeBl (* (- 1.0) state.vehicleBposBl)) state.vehicleBvBl)))
       (let ((a!452 (* state.vehicleBvBs a!451)))
        (let ((a!327 (* (- 1.0) state.intersectionBsizeBs)))
         (let ((a!477 (+ state.intersectionBposBs a!327)))
          (let ((a!433 (* (- 1.0) state.vehicleBposBl)))
           (let ((a!436 (/ (+ (* (- 1.0) state.vehicleAegoBsizeBl)
                (* (- 1.0) state.vehicleBsizeBl) a!433) state.vehicleBvBl)))
            (let ((a!437 (* state.vehicleBvBs a!436)))
             (let ((b!487 (and (>= (+ state.vehicleBposBs a!437 state.vehicleAegoBsizeBs) a!477)
                 (<= (+ state.vehicleBposBs a!437 a!319) a!202)
                 (>= (+ state.vehicleBposBs a!452 state.vehicleAegoBsizeBs) a!477)
                 (<= (+ state.vehicleBposBs a!452 a!319) a!202))))
              (let ((b!473 (or false (and (not (<= 0.0 state.vehicleBposBl))
                   (not (<= state.vehicleBvBl 0.0)))
                  (and (not (<= state.vehicleBposBl 0.0))
                   (not (<= 0.0 state.vehicleBvBl))))))
               (let ((a!419 (* (- 1.0) state.vehicleBsizeBs)))
                (let ((a!454 (* state.vehicleAegoBvBs a!451)))
                 (let ((a!453 (+ state.vehicleBposBs a!452)))
                  (let ((b!457 (<= a!453 (+ state.vehicleAegoBposBs a!454 state.vehicleAegoBsizeBs state.vehicleBsizeBs))))
                   (let ((a!438 (+ state.vehicleBposBs a!437)))
                    (let ((a!439 (* state.vehicleAegoBvBs a!436)))
                     (let ((b!442 (<= a!438 (+ state.vehicleAegoBposBs a!439 state.vehicleAegoBsizeBs state.vehicleBsizeBs))))
                      (let ((b!464 (or false (and b!442 (>= a!438 (+ state.vehicleAegoBposBs a!439 a!319 a!419)))
                          (and b!457 (>= a!453 (+ state.vehicleAegoBposBs a!454 a!319 a!419))))))
                       (let ((a!423 (* (- 1.0) state.intersectionBposBs)))
                        (let ((a!425 (+ state.vehicleBposBs a!419 a!423 a!327)))
                         (let ((b!475 (and (not (<= a!425 0.0))
                             (not (<= state.vehicleAegoBsizeBs a!425)) b!464 b!473)))
                          (let ((b!474 (and b!464 b!473)))
                           (let ((a!357 (+ (* 10.0 state.intersectionBposBs)
                               (* (- 10.0) state.intersectionBsizeBs)
                               (* (- 10.0) state.vehicleAegoBposBs)
                               (* (- 10.0) state.vehicleAegoBsizeBs))))
                            (let ((a!326 (+ (* (/ 1.0 2.0)
                                 (* state.vehicleAegoBvBl state.vehicleAegoBvBl))
                                (* (/ 1.0 2.0)
                                 (* state.vehicleAegoBvBs state.vehicleAegoBvBs)))))
                             (let ((a!331 (* (- 1.0) state.vehicleAegoBposBs)))
                              (let ((a!333 (+ state.intersectionBposBs a!327 a!331 a!319)))
                               (let ((b!362 (or false (and (= 0.0 a!333)
                                    (<= (/ a!326 0.0) 10.0))
                                   (and (not (<= a!333 0.0))
                                    (<= a!326 a!357))
                                   (and (not (>= a!333 0.0))
                                    (>= a!326 a!357)))))
                                (let ((b!364 (and (not state.overlapCfinished)
                                    (not (<= a!202 (+ state.vehicleAegoBposBs a!319))) b!362)))
                                 (let ((b!312 (= state.scenarioCstage 2)))
                                  (let ((b!314 (or false b!312 b!364 b!474 b!475 b!487)))
                                   (or false b!314)))))))))))))))))))))))))))))))) 0 1))
  (= next.vehicleAegoBarriveCtime (ite (= state.scenarioCstage 1)
    (+ state.vehicleAegoBarriveCtime 0.1) 0))
  (= next.scenarioCstage (ite (= state.scenarioCstage 1)
    (ite (<= (+ state.intersectionBposBs state.intersectionBsizeBs state.vehicleAegoBsizeBs) 0.0)
     (ite (let ((a!327 (* (- 1.0) state.intersectionBsizeBs)))
       (let ((a!423 (* (- 1.0) state.intersectionBposBs)))
        (let ((a!319 (* (- 1.0) state.vehicleAegoBsizeBs)))
         (let ((a!331 (* (- 1.0) state.vehicleAegoBposBs)))
          (let ((a!333 (+ state.intersectionBposBs a!327 a!331 a!319)))
           (let ((b!484 (<= (+ state.intersectionBposBs state.intersectionBsizeBs state.vehicleAegoBsizeBs) 0.0)))
            (let ((b!458 (not b!484)))
             (let ((b!513 (and b!458 (<= a!333 2.0)
                 (not (<= (+ state.vehicleAegoBposBs state.vehicleAegoBsizeBs a!423 a!327) 3.0)))))
              (or false b!484 b!513)))))))))
      (ite (> state.vehicleAegoBvBs 3.0) 3 2) state.scenarioCstage) 0) state.scenarioCstage))
  (= next.overlapCfinished (ite (> state.scenarioCstage 1) true state.overlapCfinished))
  (= next.violationCcounter (ite (let ((b!315 (= state.scenarioCstage 3)))
     (let ((b!496 (not (<= state.vehicleAegoBlaneBturn 0.0))))
      (let ((b!488 (= state.trafficClightAmainBcolor 1)))
       (let ((b!440 (<= state.trafficClightAselfBcolor 0)))
        (let ((b!317 (and b!440 b!488 b!496 b!315)))
         (let ((a!202 (+ state.intersectionBposBs state.intersectionBsizeBs)))
          (let ((a!319 (* (- 1.0) state.vehicleAegoBsizeBs)))
           (let ((a!451 (/ (+ state.vehicleAegoBsizeBl state.vehicleBsizeBl (* (- 1.0) state.vehicleBposBl)) state.vehicleBvBl)))
            (let ((a!452 (* state.vehicleBvBs a!451)))
             (let ((a!327 (* (- 1.0) state.intersectionBsizeBs)))
              (let ((a!477 (+ state.intersectionBposBs a!327)))
               (let ((a!433 (* (- 1.0) state.vehicleBposBl)))
                (let ((a!436 (/ (+ (* (- 1.0) state.vehicleAegoBsizeBl)
                     (* (- 1.0) state.vehicleBsizeBl) a!433) state.vehicleBvBl)))
                 (let ((a!437 (* state.vehicleBvBs a!436)))
                  (let ((b!487 (and (>= (+ state.vehicleBposBs a!437 state.vehicleAegoBsizeBs) a!477)
                      (<= (+ state.vehicleBposBs a!437 a!319) a!202)
                      (>= (+ state.vehicleBposBs a!452 state.vehicleAegoBsizeBs) a!477)
                      (<= (+ state.vehicleBposBs a!452 a!319) a!202))))
                   (let ((b!473 (or false (and (not (<= 0.0 state.vehicleBposBl))
                        (not (<= state.vehicleBvBl 0.0)))
                       (and (not (<= state.vehicleBposBl 0.0))
                        (not (<= 0.0 state.vehicleBvBl))))))
                    (let ((a!419 (* (- 1.0) state.vehicleBsizeBs)))
                     (let ((a!454 (* state.vehicleAegoBvBs a!451)))
                      (let ((a!453 (+ state.vehicleBposBs a!452)))
                       (let ((b!457 (<= a!453 (+ state.vehicleAegoBposBs a!454 state.vehicleAegoBsizeBs state.vehicleBsizeBs))))
                        (let ((a!438 (+ state.vehicleBposBs a!437)))
                         (let ((a!439 (* state.vehicleAegoBvBs a!436)))
                          (let ((b!442 (<= a!438 (+ state.vehicleAegoBposBs a!439 state.vehicleAegoBsizeBs state.vehicleBsizeBs))))
                           (let ((b!464 (or false (and b!442 (>= a!438 (+ state.vehicleAegoBposBs a!439 a!319 a!419)))
                               (and b!457 (>= a!453 (+ state.vehicleAegoBposBs a!454 a!319 a!419))))))
                            (let ((a!423 (* (- 1.0) state.intersectionBposBs)))
                             (let ((a!425 (+ state.vehicleBposBs a!419 a!423 a!327)))
                              (let ((b!475 (and (not (<= a!425 0.0))
                                  (not (<= state.vehicleAegoBsizeBs a!425)) b!464 b!473)))
                               (let ((b!474 (and b!464 b!473)))
                                (let ((a!357 (+ (* 10.0 state.intersectionBposBs)
                                    (* (- 10.0) state.intersectionBsizeBs)
                                    (* (- 10.0) state.vehicleAegoBposBs)
                                    (* (- 10.0) state.vehicleAegoBsizeBs))))
                                 (let ((a!326 (+ (* (/ 1.0 2.0)
                                      (* state.vehicleAegoBvBl state.vehicleAegoBvBl))
                                     (* (/ 1.0 2.0)
                                      (* state.vehicleAegoBvBs state.vehicleAegoBvBs)))))
                                  (let ((a!331 (* (- 1.0) state.vehicleAegoBposBs)))
                                   (let ((a!333 (+ state.intersectionBposBs a!327 a!331 a!319)))
                                    (let ((b!362 (or false (and (= 0.0 a!333)
                                         (<= (/ a!326 0.0) 10.0))
                                        (and (not (<= a!333 0.0))
                                         (<= a!326 a!357))
                                        (and (not (>= a!333 0.0))
                                         (>= a!326 a!357)))))
                                     (let ((b!364 (and (not state.overlapCfinished)
                                         (not (<= a!202 (+ state.vehicleAegoBposBs a!319))) b!362)))
                                      (let ((b!312 (= state.scenarioCstage 2)))
                                       (let ((b!314 (or false b!312 b!364 b!474 b!475 b!487)))
                                        (and (not (or false b!314))
                                         (or false b!317))))))))))))))))))))))))))))))))))))))
    (+ state.violationCcounter 1) 0))
  (= next.laneCleftCwidth state.laneCleftCwidth)
  (= next.laneCrightCwidth state.laneCrightCwidth)
  (= next.roadCleftCwidth state.roadCleftCwidth)
  (= next.roadCrightCwidth state.roadCrightCwidth)
  (= next.vehicleAegoBlaneBlaneCid state.vehicleAegoBlaneBlaneCid)
  (= next.vehicleAegoBlaneBroadCid state.vehicleAegoBlaneBroadCid)
  (= next.vehicleAegoBlaneBturn state.vehicleAegoBlaneBturn)
  (= next.vehicleAegoBlaneBwayCid state.vehicleAegoBlaneBwayCid)
  (= next.vehicleAegoBlength state.vehicleAegoBlength)
  (= next.vehicleAegoBposBl state.vehicleAegoBposBl)
  (= next.vehicleAegoBposBs state.vehicleAegoBposBs)
  (= next.vehicleAegoBsizeBl state.vehicleAegoBsizeBl)
  (= next.vehicleAegoBsizeBs state.vehicleAegoBsizeBs)
  (= next.vehicleAegoBstopCline (- (- state.intersectionBposBs (* 0.1 state.vehicleAegoBvBs)) state.intersectionBsizeBs))
  (= next.vehicleAegoBvBl state.vehicleAegoBvBl)
  (= next.destinationBposBl state.destinationBposBl)
  (= next.destinationBposBs (- state.destinationBposBs (* 0.1 state.vehicleAegoBvBs)))
  (= next.destinationBsizeBl state.destinationBsizeBl)
  (= next.destinationBsizeBs state.destinationBsizeBs)
  (= next.crosswalkBposBl state.crosswalkBposBl)
  (= next.crosswalkBposBs (- state.crosswalkBposBs (* 0.1 state.vehicleAegoBvBs)))
  (= next.crosswalkBsizeBl state.crosswalkBsizeBl)
  (= next.crosswalkBsizeBs state.crosswalkBsizeBs)
  (= next.pedestrianBposBl state.pedestrianBposBl)
  (= next.pedestrianBposBs (- state.pedestrianBposBs (* 0.1 state.vehicleAegoBvBs)))
  (= next.pedestrianBsizeBl state.pedestrianBsizeBl)
  (= next.pedestrianBsizeBs state.pedestrianBsizeBs)
  (= next.pedestrianBvBl state.pedestrianBvBl)
  (= next.pedestrianBvBs state.pedestrianBvBs)
  (= next.vehicleBarriveCtime state.vehicleBarriveCtime)
  (= next.vehicleBlaneBlaneCid state.vehicleBlaneBlaneCid)
  (= next.vehicleBlaneBroadCid state.vehicleBlaneBroadCid)
  (= next.vehicleBlaneBturn state.vehicleBlaneBturn)
  (= next.vehicleBlaneBwayCid state.vehicleBlaneBwayCid)
  (= next.vehicleBlength state.vehicleBlength)
  (= next.vehicleBposBl state.vehicleBposBl)
  (= next.vehicleBposBs (- state.vehicleBposBs (* 0.1 state.vehicleAegoBvBs)))
  (= next.vehicleBsizeBl state.vehicleBsizeBl)
  (= next.vehicleBsizeBs state.vehicleBsizeBs)
  (= next.vehicleBstopCline state.vehicleBstopCline)
  (= next.vehicleBvBl state.vehicleBvBl)
  (= next.vehicleBvBs state.vehicleBvBs)
  (= next.stopCsignBposBl state.stopCsignBposBl)
  (= next.stopCsignBposBs (- state.stopCsignBposBs (* 0.1 state.vehicleAegoBvBs)))
  (= next.stopCsignBsizeBl state.stopCsignBsizeBl)
  (= next.stopCsignBsizeBs state.stopCsignBsizeBs)
  (= next.trafficClightAselfBcolor state.trafficClightAselfBcolor)
  (= next.trafficClightAselfBposBl state.trafficClightAselfBposBl)
  (= next.trafficClightAselfBposBs (- state.trafficClightAselfBposBs (* 0.1 state.vehicleAegoBvBs)))
  (= next.trafficClightAselfBsizeBl state.trafficClightAselfBsizeBl)
  (= next.trafficClightAselfBsizeBs state.trafficClightAselfBsizeBs)
  (= next.trafficClightAmainBcolor state.trafficClightAmainBcolor)
  (= next.trafficClightAmainBposBl state.trafficClightAmainBposBl)
  (= next.trafficClightAmainBposBs (- state.trafficClightAmainBposBs (* 0.1 state.vehicleAegoBvBs)))
  (= next.trafficClightAmainBsizeBl state.trafficClightAmainBsizeBl)
  (= next.trafficClightAmainBsizeBs state.trafficClightAmainBsizeBs)
  (= next.intersectionBposBl state.intersectionBposBl)
  (= next.intersectionBposBs (- state.intersectionBposBs (* 0.1 state.vehicleAegoBvBs)))
  (= next.intersectionBsizeBl state.intersectionBsizeBl)
  (= next.intersectionBsizeBs state.intersectionBsizeBs))
)

;; Directly define a simple counter system
(define-transition-system T traffic_state
   ;; Initial states 
   initial_states
   ;; Transition 
   move_traffic
)

;; Check violation
(query T 
(let ((b!315 (= scenarioCstage 3)))
  (let ((b!496 (not (<= vehicleAegoBlaneBturn 0.0))))
   (let ((b!488 (= trafficClightAmainBcolor 1)))
    (let ((b!440 (<= trafficClightAselfBcolor 0)))
     (let ((b!317 (and b!440 b!488 b!496 b!315)))
      (let ((a!202 (+ intersectionBposBs intersectionBsizeBs)))
       (let ((a!319 (* (- 1.0) vehicleAegoBsizeBs)))
        (let ((a!451 (/ (+ vehicleAegoBsizeBl vehicleBsizeBl (* (- 1.0) vehicleBposBl)) vehicleBvBl)))
         (let ((a!452 (* vehicleBvBs a!451)))
          (let ((a!327 (* (- 1.0) intersectionBsizeBs)))
           (let ((a!477 (+ intersectionBposBs a!327)))
            (let ((a!433 (* (- 1.0) vehicleBposBl)))
             (let ((a!436 (/ (+ (* (- 1.0) vehicleAegoBsizeBl)
                  (* (- 1.0) vehicleBsizeBl) a!433) vehicleBvBl)))
              (let ((a!437 (* vehicleBvBs a!436)))
               (let ((b!487 (and (>= (+ vehicleBposBs a!437 vehicleAegoBsizeBs) a!477)
                   (<= (+ vehicleBposBs a!437 a!319) a!202)
                   (>= (+ vehicleBposBs a!452 vehicleAegoBsizeBs) a!477)
                   (<= (+ vehicleBposBs a!452 a!319) a!202))))
                (let ((b!473 (or false (and (not (<= 0.0 vehicleBposBl))
                     (not (<= vehicleBvBl 0.0)))
                    (and (not (<= vehicleBposBl 0.0))
                     (not (<= 0.0 vehicleBvBl))))))
                 (let ((a!419 (* (- 1.0) vehicleBsizeBs)))
                  (let ((a!454 (* vehicleAegoBvBs a!451)))
                   (let ((a!453 (+ vehicleBposBs a!452)))
                    (let ((b!457 (<= a!453 (+ vehicleAegoBposBs a!454 vehicleAegoBsizeBs vehicleBsizeBs))))
                     (let ((a!438 (+ vehicleBposBs a!437)))
                      (let ((a!439 (* vehicleAegoBvBs a!436)))
                       (let ((b!442 (<= a!438 (+ vehicleAegoBposBs a!439 vehicleAegoBsizeBs vehicleBsizeBs))))
                        (let ((b!464 (or false (and b!442 (>= a!438 (+ vehicleAegoBposBs a!439 a!319 a!419)))
                            (and b!457 (>= a!453 (+ vehicleAegoBposBs a!454 a!319 a!419))))))
                         (let ((a!423 (* (- 1.0) intersectionBposBs)))
                          (let ((a!425 (+ vehicleBposBs a!419 a!423 a!327)))
                           (let ((b!475 (and (not (<= a!425 0.0))
                               (not (<= vehicleAegoBsizeBs a!425)) b!464 b!473)))
                            (let ((b!474 (and b!464 b!473)))
                             (let ((a!357 (+ (* 10.0 intersectionBposBs)
                                 (* (- 10.0) intersectionBsizeBs)
                                 (* (- 10.0) vehicleAegoBposBs)
                                 (* (- 10.0) vehicleAegoBsizeBs))))
                              (let ((a!326 (+ (* (/ 1.0 2.0)
                                   (* vehicleAegoBvBl vehicleAegoBvBl))
                                  (* (/ 1.0 2.0)
                                   (* vehicleAegoBvBs vehicleAegoBvBs)))))
                               (let ((a!331 (* (- 1.0) vehicleAegoBposBs)))
                                (let ((a!333 (+ intersectionBposBs a!327 a!331 a!319)))
                                 (let ((b!362 (or false (and (= 0.0 a!333)
                                      (<= (/ a!326 0.0) 10.0))
                                     (and (not (<= a!333 0.0))
                                      (<= a!326 a!357))
                                     (and (not (>= a!333 0.0))
                                      (>= a!326 a!357)))))
                                  (let ((b!364 (and (not overlapCfinished)
                                      (not (<= a!202 (+ vehicleAegoBposBs a!319))) b!362)))
                                   (let ((b!312 (= scenarioCstage 2)))
                                    (let ((b!314 (or false b!312 b!364 b!474 b!475 b!487)))
                                     (and (not (and (not (or false b!314))
                                        (or false b!317))) true)))))))))))))))))))))))))))))))))))))
)
