;; A definition of a state type called "traffic_state" with variables
;; x and y of type Real. 
(define-state-type traffic_state 
((laneCleftCwidth Real)
  (laneCrightCwidth Real)
  (roadCleftCwidth Real)
  (roadCrightCwidth Real)
  (vehicleAegoBarriveCtime Real)
  (vehicleAegoBlaneBlaneCid Real)
  (vehicleAegoBlaneBroadCid Real)
  (vehicleAegoBlaneBturn Real)
  (vehicleAegoBlaneBwayCid Real)
  (vehicleAegoBlength Real)
  (vehicleAegoBposBl Real)
  (vehicleAegoBposBs Real)
  (vehicleAegoBsizeBl Real)
  (vehicleAegoBsizeBs Real)
  (vehicleAegoBstopCline Real)
  (vehicleAegoBvBl Real)
  (vehicleAegoBvBs Real)
  (destinationBposBl Real)
  (destinationBposBs Real)
  (destinationBsizeBl Real)
  (destinationBsizeBs Real)
  (intersectionBposBl Real)
  (intersectionBposBs Real)
  (intersectionBsizeBl Real)
  (intersectionBsizeBs Real)
  (vehicleBarriveCtime Real)
  (vehicleBlaneBlaneCid Real)
  (vehicleBlaneBroadCid Real)
  (vehicleBlaneBturn Real)
  (vehicleBlaneBwayCid Real)
  (vehicleBlength Real)
  (vehicleBposBl Real)
  (vehicleBposBs Real)
  (vehicleBsizeBl Real)
  (vehicleBsizeBs Real)
  (vehicleBstopCline Real)
  (vehicleBvBl Real)
  (vehicleBvBs Real)
  (violationCcounter Int)
  (scenarioCstage Int))
)

;; A definition of a set of states "initial_states" over 
;; "traffic_state" by a state formula. These are all states where 
;; both x and y are 0.
(define-states initial_states traffic_state
(let ((b!402 (= violationCcounter 0)))
  (let ((a!237 (* (- 1.0) vehicleAegoBsizeBs)))
   (let ((a!223 (* (- 1.0) vehicleAegoBposBs)))
    (let ((a!297 (* (- 1.0) intersectionBsizeBs)))
     (let ((a!298 (+ intersectionBposBs a!297 a!223 a!237)))
      (let ((b!333 (<= (+ intersectionBposBs intersectionBsizeBs vehicleAegoBsizeBs) 0.0)))
       (let ((b!334 (not b!333)))
        (let ((b!353 (and b!334 (<= a!298 25.0)
            (not (<= a!298 2.0)))))
         (let ((b!395 (= vehicleAegoBarriveCtime 0.0)))
          (let ((b!410 (= vehicleBarriveCtime 0.0)))
           (let ((b!294 (= scenarioCstage 1)))
            (let ((b!121 (= vehicleBlength 2.0)))
             (let ((a!109 (+ (* vehicleBvBl vehicleBvBl)
                 (* vehicleBvBs vehicleBvBs))))
              (let ((b!113 (<= a!109 80.0)))
               (let ((b!112 (and (= vehicleBsizeBl 2.0)
                   (= vehicleBsizeBs 2.0))))
                (let ((b!104 (and (> vehicleBsizeBl 0.0)
                    (> vehicleBsizeBs 0.0))))
                 (let ((a!82 (+ intersectionBposBl intersectionBsizeBl)))
                  (let ((a!80 (- intersectionBposBl intersectionBsizeBl)))
                   (let ((b!93 (<= (* a!80 a!82) 0.0)))
                    (let ((b!91 (and (>= intersectionBsizeBs 10.0)
                        (>= intersectionBsizeBl 5.0))))
                     (let ((b!86 (and (> intersectionBsizeBl 0.0)
                         (> intersectionBsizeBs 0.0))))
                      (let ((b!55 (and (= destinationBsizeBl 2.0)
                          (= destinationBsizeBs 2.0))))
                       (let ((b!52 (and (> destinationBsizeBl 0.0)
                           (> destinationBsizeBs 0.0))))
                        (let ((b!41 (and (= vehicleAegoBvBl 0.0)
                            (> vehicleAegoBvBs 0.0))))
                         (let ((b!38 (and (= vehicleAegoBposBl 0.0)
                             (= vehicleAegoBposBs 0.0))))
                          (let ((b!35 (= vehicleAegoBlength 2.0)))
                           (let ((a!21 (+ (* vehicleAegoBvBl vehicleAegoBvBl)
                               (* vehicleAegoBvBs vehicleAegoBvBs))))
                            (let ((b!27 (<= a!21 80.0)))
                             (let ((b!25 (and (= vehicleAegoBsizeBl 2.0)
                                 (= vehicleAegoBsizeBs 2.0))))
                              (let ((b!16 (and (> vehicleAegoBsizeBl 0.0)
                                  (> vehicleAegoBsizeBs 0.0))))
                               (let ((b!172 (= vehicleBvBl 0.0)))
                                (let ((b!201 (> vehicleBposBl 0.0)))
                                 (let ((b!159 (< vehicleBlaneBturn 0.0)))
                                  (let ((b!141 (and (>= vehicleBlaneBwayCid 2.0)
                                      (< vehicleBlaneBwayCid 3.0))))
                                   (let ((b!154 (< vehicleAegoBlaneBturn 0.0)))
                                    (let ((b!197 (<= vehicleBvBl 0.0)))
                                     (let ((b!155 (> vehicleBlaneBturn 0.0)))
                                      (let ((b!181 (not b!155)))
                                       (let ((b!129 (< vehicleBlaneBwayCid 4.0)))
                                        (let ((b!168 (and (>= vehicleBlaneBwayCid 3.0) b!129)))
                                         (let ((b!157 (= vehicleAegoBlaneBturn 0.0)))
                                          (let ((b!190 (and b!157 b!168 b!181)))
                                           (let ((b!163 (= vehicleBlaneBturn 0.0)))
                                            (let ((b!189 (and b!154 b!168 b!163)))
                                             (let ((b!198 (and (or false (and b!154 b!141 b!155) b!189 b!190)
                                                 (>= vehicleBposBl 0.0) b!197)))
                                              (let ((b!186 (> vehicleBvBl 0.0)))
                                               (let ((b!135 (and (>= vehicleBlaneBwayCid 1.0)
                                                   (< vehicleBlaneBwayCid 2.0))))
                                                (let ((b!187 (and (or false (and b!154 b!135 b!181)
                                                     (and b!157 b!135 b!163)
                                                     (and b!157 b!141 b!159)) b!186)))
                                                 (let ((b!178 (<= vehicleBposBl 0.0)))
                                                  (let ((b!177 (or false (and b!157 b!135 b!159)
                                                      (and (> vehicleAegoBlaneBturn 0.0) b!135 b!163)
                                                      (and (> vehicleAegoBlaneBturn 0.0) b!141 b!159))))
                                                   (let ((b!171 (< vehicleBposBl 0.0)))
                                                    (let ((b!170 (or false (and b!154 b!135 b!155)
                                                        (and b!157 b!135 b!155)
                                                        (and b!157 b!141 (not b!159))
                                                        (and (> vehicleAegoBlaneBturn 0.0) b!135 (not b!163))
                                                        (and (> vehicleAegoBlaneBturn 0.0) b!141 (not b!159))
                                                        (and (> vehicleAegoBlaneBturn 0.0) b!168))))
                                                     (let ((b!203 (or false (and b!170 b!171 b!172)
                                                         (and b!177 b!178 (>= vehicleBvBl 0.0)) b!187 (and (or false (and b!154 b!141 b!163) b!189 b!190)
                                                          (< vehicleBvBl 0.0)) b!198 (and (or false (and b!154 b!141 b!159)) b!201 b!172))))
                                                      (let ((a!81 (- intersectionBposBs intersectionBsizeBs)))
                                                       (let ((a!101 (+ vehicleBposBs vehicleBsizeBs)))
                                                        (let ((b!149 (and (and (>= vehicleBlaneBwayCid 0.0)
                                                             (< vehicleBlaneBwayCid 1.0))
                                                            (< a!101 a!81))))
                                                         (let ((a!83 (+ intersectionBposBs intersectionBsizeBs)))
                                                          (let ((a!99 (- vehicleBposBs vehicleBsizeBs)))
                                                           (let ((b!150 (or false (and b!135 (< (+ vehicleBposBl vehicleBsizeBl) a!80))
                                                               (and b!141 (< a!99 a!83))
                                                               (and b!135 (> (+ vehicleBposBl vehicleBsizeBl) a!80)) b!149)))
                                                            (let ((b!153 (or false (and (>= vehicleBstopCline 0.0) b!150)
                                                                (< vehicleBstopCline 0.0))))
                                                             (let ((b!128 (>= vehicleBlaneBwayCid 0.0)))
                                                              (let ((b!130 (and b!128 b!129)))
                                                               (let ((b!127 (and (>= vehicleAegoBlaneBwayCid 0.0)
                                                                   (< vehicleAegoBlaneBwayCid 4.0))))
                                                                (let ((b!123 (= vehicleAegoBstopCline a!81)))
                                                                 (let ((b!122 (= vehicleAegoBlaneBwayCid 0.0)))
                                                                  (let ((b!75 (and (> roadCleftCwidth 0.0)
                                                                      (> roadCrightCwidth 0.0)
                                                                      (>= (+ roadCleftCwidth roadCrightCwidth)
                                                                       (/ 99.0 10.0)))))
                                                                   (let ((b!69 (> roadCrightCwidth laneCrightCwidth)))
                                                                    (let ((b!68 (> roadCleftCwidth laneCleftCwidth)))
                                                                     (let ((b!64 (and (> laneCleftCwidth 0.0)
                                                                         (> laneCrightCwidth 0.0)
                                                                         (>= (+ laneCleftCwidth laneCrightCwidth)
                                                                          (/ 33.0 10.0)))))
                                                                      (let ((b!415 (and b!64 b!68 b!69 b!75 b!122 b!123 b!127 b!130 b!153 b!203 b!16 b!25 b!27 b!35 b!38 b!41 b!52 b!55 b!86 b!91 b!93 b!104 b!112 b!113 b!121)))
                                                                       (and b!415 b!294 b!410 b!395 b!353 b!402)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
)

;; Definition of a transition
(define-transition move_traffic traffic_state
(and (= next.vehicleAegoBvBs (ite (let ((a!83 (+ state.intersectionBposBs state.intersectionBsizeBs)))
     (let ((a!237 (* (- 1.0) state.vehicleAegoBsizeBs)))
      (let ((a!325 (/ (+ state.vehicleAegoBsizeBl state.vehicleBsizeBl (* (- 1.0) state.vehicleBposBl)) state.vehicleBvBl)))
       (let ((a!326 (* state.vehicleBvBs a!325)))
        (let ((a!297 (* (- 1.0) state.intersectionBsizeBs)))
         (let ((a!351 (+ state.intersectionBposBs a!297)))
          (let ((a!307 (* (- 1.0) state.vehicleBposBl)))
           (let ((a!310 (/ (+ (* (- 1.0) state.vehicleAegoBsizeBl)
                (* (- 1.0) state.vehicleBsizeBl) a!307) state.vehicleBvBl)))
            (let ((a!311 (* state.vehicleBvBs a!310)))
             (let ((b!361 (and (>= (+ state.vehicleBposBs a!311 state.vehicleAegoBsizeBs) a!351)
                 (<= (+ state.vehicleBposBs a!311 a!237) a!83)
                 (>= (+ state.vehicleBposBs a!326 state.vehicleAegoBsizeBs) a!351)
                 (<= (+ state.vehicleBposBs a!326 a!237) a!83))))
              (let ((b!347 (or false (and (not (<= 0.0 state.vehicleBposBl))
                   (not (<= state.vehicleBvBl 0.0)))
                  (and (not (<= state.vehicleBposBl 0.0))
                   (not (<= 0.0 state.vehicleBvBl))))))
               (let ((a!292 (* (- 1.0) state.vehicleBsizeBs)))
                (let ((a!328 (* state.vehicleAegoBvBs a!325)))
                 (let ((a!327 (+ state.vehicleBposBs a!326)))
                  (let ((b!331 (<= a!327 (+ state.vehicleAegoBposBs a!328 state.vehicleAegoBsizeBs state.vehicleBsizeBs))))
                   (let ((a!312 (+ state.vehicleBposBs a!311)))
                    (let ((a!313 (* state.vehicleAegoBvBs a!310)))
                     (let ((b!316 (<= a!312 (+ state.vehicleAegoBposBs a!313 state.vehicleAegoBsizeBs state.vehicleBsizeBs))))
                      (let ((b!338 (or false (and b!316 (>= a!312 (+ state.vehicleAegoBposBs a!313 a!237 a!292)))
                          (and b!331 (>= a!327 (+ state.vehicleAegoBposBs a!328 a!237 a!292))))))
                       (let ((a!299 (+ state.vehicleBposBs a!292 (* (- 1.0) state.intersectionBposBs) a!297)))
                        (let ((b!349 (and (not (<= a!299 0.0))
                            (not (<= state.vehicleAegoBsizeBs a!299)) b!338 b!347)))
                         (let ((b!348 (and b!338 b!347)))
                          (let ((b!294 (= state.scenarioCstage 1)))
                           (let ((a!223 (* (- 1.0) state.vehicleAegoBposBs)))
                            (let ((a!298 (+ state.intersectionBposBs a!297 a!223 a!237)))
                             (let ((b!276 (>= a!298 2.0)))
                              (let ((b!275 (<= a!298 5.0)))
                               (let ((b!274 (>= a!298 0.0)))
                                (let ((b!333 (<= (+ state.intersectionBposBs state.intersectionBsizeBs state.vehicleAegoBsizeBs) 0.0)))
                                 (let ((b!334 (not b!333)))
                                  (let ((b!280 (or false (and b!334 b!274 b!275 b!276)
                                      (and b!334 b!274 b!275 (not b!276)))))
                                   (let ((b!240 (and b!280 b!294)))
                                    (let ((b!244 (or false b!240 b!348 b!349 b!361)))
                                     (or false b!244)))))))))))))))))))))))))))))))))) 0 1))
  (= next.vehicleBarriveCtime (ite (< (- state.vehicleBstopCline state.vehicleBsizeBs) 2)
    (+ state.vehicleBarriveCtime 0.1) 0))
  (= next.scenarioCstage (ite (= state.scenarioCstage 1)
    (ite (<= (+ state.intersectionBposBs state.intersectionBsizeBs state.vehicleAegoBsizeBs) 0.0) 0 (ite (let ((a!237 (* (- 1.0) state.vehicleAegoBsizeBs)))
       (let ((a!223 (* (- 1.0) state.vehicleAegoBposBs)))
        (let ((a!297 (* (- 1.0) state.intersectionBsizeBs)))
         (let ((a!298 (+ state.intersectionBposBs a!297 a!223 a!237)))
          (let ((b!333 (<= (+ state.intersectionBposBs state.intersectionBsizeBs state.vehicleAegoBsizeBs) 0.0)))
           (let ((b!334 (not b!333)))
            (and b!334 (not (<= a!298 0.0))))))))) 2 1)) state.scenarioCstage))
  (= next.violationCcounter (ite (let ((b!387 (>= state.vehicleAegoBarriveCtime 0.0)))
     (let ((a!12 (+ state.vehicleAegoBposBs state.vehicleAegoBsizeBs)))
      (let ((b!423 (>= a!12 (+ (- 2.0) state.intersectionBposBs (* (- 1.0) state.intersectionBsizeBs)))))
       (let ((a!83 (+ state.intersectionBposBs state.intersectionBsizeBs)))
        (let ((a!237 (* (- 1.0) state.vehicleAegoBsizeBs)))
         (let ((a!325 (/ (+ state.vehicleAegoBsizeBl state.vehicleBsizeBl (* (- 1.0) state.vehicleBposBl)) state.vehicleBvBl)))
          (let ((a!326 (* state.vehicleBvBs a!325)))
           (let ((a!297 (* (- 1.0) state.intersectionBsizeBs)))
            (let ((a!351 (+ state.intersectionBposBs a!297)))
             (let ((a!307 (* (- 1.0) state.vehicleBposBl)))
              (let ((a!310 (/ (+ (* (- 1.0) state.vehicleAegoBsizeBl)
                   (* (- 1.0) state.vehicleBsizeBl) a!307) state.vehicleBvBl)))
               (let ((a!311 (* state.vehicleBvBs a!310)))
                (let ((b!361 (and (>= (+ state.vehicleBposBs a!311 state.vehicleAegoBsizeBs) a!351)
                    (<= (+ state.vehicleBposBs a!311 a!237) a!83)
                    (>= (+ state.vehicleBposBs a!326 state.vehicleAegoBsizeBs) a!351)
                    (<= (+ state.vehicleBposBs a!326 a!237) a!83))))
                 (let ((b!347 (or false (and (not (<= 0.0 state.vehicleBposBl))
                      (not (<= state.vehicleBvBl 0.0)))
                     (and (not (<= state.vehicleBposBl 0.0))
                      (not (<= 0.0 state.vehicleBvBl))))))
                  (let ((a!292 (* (- 1.0) state.vehicleBsizeBs)))
                   (let ((a!328 (* state.vehicleAegoBvBs a!325)))
                    (let ((a!327 (+ state.vehicleBposBs a!326)))
                     (let ((b!331 (<= a!327 (+ state.vehicleAegoBposBs a!328 state.vehicleAegoBsizeBs state.vehicleBsizeBs))))
                      (let ((a!312 (+ state.vehicleBposBs a!311)))
                       (let ((a!313 (* state.vehicleAegoBvBs a!310)))
                        (let ((b!316 (<= a!312 (+ state.vehicleAegoBposBs a!313 state.vehicleAegoBsizeBs state.vehicleBsizeBs))))
                         (let ((b!338 (or false (and b!316 (>= a!312 (+ state.vehicleAegoBposBs a!313 a!237 a!292)))
                             (and b!331 (>= a!327 (+ state.vehicleAegoBposBs a!328 a!237 a!292))))))
                          (let ((b!348 (and b!338 b!347)))
                           (let ((a!223 (* (- 1.0) state.vehicleAegoBposBs)))
                            (let ((a!298 (+ state.intersectionBposBs a!297 a!223 a!237)))
                             (let ((b!407 (and (not (<= a!351 (+ 2.0 state.vehicleAegoBposBs state.vehicleAegoBsizeBs)))
                                 (not (<= 0.0 state.vehicleAegoBarriveCtime))
                                 (not (<= 5.0 a!298)))))
                              (let ((b!426 (or false b!407 (and (or false b!348 b!361)
                                   (<= a!12 a!351) b!423 b!387))))
                               (let ((a!299 (+ state.vehicleBposBs a!292 (* (- 1.0) state.intersectionBposBs) a!297)))
                                (let ((b!349 (and (not (<= a!299 0.0))
                                    (not (<= state.vehicleAegoBsizeBs a!299)) b!338 b!347)))
                                 (let ((b!294 (= state.scenarioCstage 1)))
                                  (let ((b!275 (<= a!298 5.0)))
                                   (let ((b!274 (>= a!298 0.0)))
                                    (let ((b!333 (<= (+ state.intersectionBposBs state.intersectionBsizeBs state.vehicleAegoBsizeBs) 0.0)))
                                     (let ((b!334 (not b!333)))
                                      (let ((b!280 (or false (and b!334 b!274 b!275 (>= a!298 2.0))
                                          (and b!334 b!274 b!275 (not (>= a!298 2.0))))))
                                       (let ((b!240 (and b!280 b!294)))
                                        (let ((b!244 (or false b!240 b!348 b!349 b!361)))
                                         (and (not (or false b!244))
                                          (or false b!426)))))))))))))))))))))))))))))))))))))))
    (+ state.violationCcounter 1) 0))
  (= next.laneCleftCwidth state.laneCleftCwidth)
  (= next.laneCrightCwidth state.laneCrightCwidth)
  (= next.roadCleftCwidth state.roadCleftCwidth)
  (= next.roadCrightCwidth state.roadCrightCwidth)
  (= next.vehicleAegoBlaneBlaneCid state.vehicleAegoBlaneBlaneCid)
  (= next.vehicleAegoBlaneBroadCid state.vehicleAegoBlaneBroadCid)
  (= next.vehicleAegoBlaneBturn state.vehicleAegoBlaneBturn)
  (= next.vehicleAegoBlaneBwayCid state.vehicleAegoBlaneBwayCid)
  (= next.vehicleAegoBlength state.vehicleAegoBlength)
  (= next.vehicleAegoBposBl state.vehicleAegoBposBl)
  (= next.vehicleAegoBposBs state.vehicleAegoBposBs)
  (= next.vehicleAegoBsizeBl state.vehicleAegoBsizeBl)
  (= next.vehicleAegoBsizeBs state.vehicleAegoBsizeBs)
  (= next.vehicleAegoBstopCline (- (- state.intersectionBposBs (* 0.1 state.vehicleAegoBvBs)) state.intersectionBsizeBs))
  (= next.vehicleAegoBvBl state.vehicleAegoBvBl)
  (= next.destinationBposBl state.destinationBposBl)
  (= next.destinationBposBs (- state.destinationBposBs (* 0.1 state.vehicleAegoBvBs)))
  (= next.destinationBsizeBl state.destinationBsizeBl)
  (= next.destinationBsizeBs state.destinationBsizeBs)
  (= next.intersectionBposBl state.intersectionBposBl)
  (= next.intersectionBposBs (- state.intersectionBposBs (* 0.1 state.vehicleAegoBvBs)))
  (= next.intersectionBsizeBl state.intersectionBsizeBl)
  (= next.intersectionBsizeBs state.intersectionBsizeBs)
  (= next.vehicleBarriveCtime state.vehicleBarriveCtime)
  (= next.vehicleBlaneBlaneCid state.vehicleBlaneBlaneCid)
  (= next.vehicleBlaneBroadCid state.vehicleBlaneBroadCid)
  (= next.vehicleBlaneBturn state.vehicleBlaneBturn)
  (= next.vehicleBlaneBwayCid state.vehicleBlaneBwayCid)
  (= next.vehicleBlength state.vehicleBlength)
  (= next.vehicleBposBl state.vehicleBposBl)
  (= next.vehicleBposBs (- state.vehicleBposBs (* 0.1 state.vehicleAegoBvBs)))
  (= next.vehicleBsizeBl state.vehicleBsizeBl)
  (= next.vehicleBsizeBs state.vehicleBsizeBs)
  (= next.vehicleBstopCline state.vehicleBstopCline)
  (= next.vehicleBvBl state.vehicleBvBl)
  (= next.vehicleBvBs state.vehicleBvBs))
)

;; Directly define a simple counter system
(define-transition-system T traffic_state
   ;; Initial states 
   initial_states
   ;; Transition 
   move_traffic
)

;; Check violation
(query T 
(< violationCcounter 2)
)
